package com.nokia.oss.outage.core.bean;

import java.util.Map;

/**
 * Created by harchen on 2015/10/21.
 */
public class RiskTypes
{
    public static final String OUTAGE_IO_UNCLOSED_RESOURCE = "OUTAGE_IO_UNCLOSED_RESOURCE";
    public static final String OUTAGE_IO_RESOURCE_MAY_FAIL_TO_CLOSE = "OUTAGE_IO_RESOURCE_MAY_FAIL_TO_CLOSE";
    public static final String OUTAGE_IO_RESOURCE_AS_RETURN_VALUE = "OUTAGE_IO_RESOURCE_AS_RETURN_VALUE";
    public static final String OUTAGE_IO_RESOURCE_AS_METHOD_INPUT_PARAMETER = "OUTAGE_IO_RESOURCE_AS_METHOD_INPUT_PARAMETER";
    public static final String OUTAGE_IO_RESOURCE_PASSED_TO_METHOD_AS_PARAMETER = "OUTAGE_IO_RESOURCE_PASSED_TO_METHOD_AS_PARAMETER";
    public static final String OUTAGE_THREAD_NOT_MANAGED_BY_POOL ="OUTAGE_THREAD_NOT_MANAGED_BY_POOL";
    public static final String OUTAGE_THREAD_POOL_WITHOUT_SIZE_LIMITATION ="OUTAGE_THREAD_POOL_WITHOUT_SIZE_LIMITATION";
    public static final String OUTAGE_THREAD_POOL_WITHOUT_QUEUE_SIZE_LIMITATION ="OUTAGE_THREAD_POOL_WITHOUT_QUEUE_SIZE_LIMITATION";
    public static final String OUTAGE_THREAD_BLOCKING_QUEUE_WITHOUT_SIZE_LIMITATION ="OUTAGE_THREAD_BLOCKING_QUEUE_WITHOUT_SIZE_LIMITATION";
    public static final String OUTAGE_THREAD_INTERRUPTED_EXCEPTION_CAUGHT_WITHOUT_RESET_INTERRUPTION_STATUS ="OUTAGE_THREAD_INTERRUPTED_EXCEPTION_CAUGHT_WITHOUT_RESET_INTERRUPTION_STATUS";
    public static final String OUTAGE_THREAD_INTERRUPTED_EXCEPTION_CAUGHT_WITHOUT_BREAK_THE_LOOP ="OUTAGE_THREAD_INTERRUPTED_EXCEPTION_CAUGHT_WITHOUT_BREAK_THE_LOOP";
    public static final String OUTAGE_CPU_WHILE_TRUE_LOOP_WITHOUT_QUIT_STATEMENT ="OUTAGE_CPU_WHILE_TRUE_LOOP_WITHOUT_QUIT_STATEMENT";
    public static final String OUTAGE_CONCURRENCY_USE_NONE_ATOMIC_OPERATION_ON_THREAD_SAFE_COLLECTION ="OUTAGE_CONCURRENCY_USE_NONE_ATOMIC_OPERATION_ON_THREAD_SAFE_COLLECTION";
    public static final String OUTAGE_CONCURRENCY_LOCK_IS_NOT_UNLOCKED_IN_FINALLY_BLOCK ="OUTAGE_CONCURRENCY_LOCK_IS_NOT_UNLOCKED_IN_FINALLY_BLOCK";
    public static final String OUTAGE_CONCURRENCY_SYNCHRONIZE_ON_LOCAL_VARIABLE ="OUTAGE_CONCURRENCY_SYNCHRONIZE_ON_LOCAL_VARIABLE";
    public static final String OUTAGE_CONCURRENCY_WAIT_AND_NOTIFY ="OUTAGE_CONCURRENCY_WAIT_AND_NOTIFY";
    public static final String OUTAGE_CONCURRENCY_NESTED_SYNCHRONIZATION ="OUTAGE_CONCURRENCY_NESTED_SYNCHRONIZATION";
    public static final String OUTAGE_EXCEPTION_IGNORE_EXCEPTION_IN_CATCH_STATEMENT ="OUTAGE_EXCEPTION_IGNORE_EXCEPTION_IN_CATCH_STATEMENT";
    public static final String OUTAGE_MEMORY_DO_NOT_START_PROCESS_IN_JAVA ="OUTAGE_MEMORY_DO_NOT_START_PROCESS_IN_JAVA";
    public static final String OUTAGE_MEMORY_JAXB_CONTEXT_RE_CREATION="OUTAGE_MEMORY_JAXB_CONTEXT_RE_CREATION";
    private Map<String, RiskType> riskTypes;

    public Map<String, RiskType> getRiskTypes()
    {
        return riskTypes;
    }

    public void setRiskTypes( Map<String, RiskType> riskTypes )
    {
        this.riskTypes = riskTypes;
    }

    public RiskType get( String key )
    {
        return riskTypes.get( key );
    }
}
